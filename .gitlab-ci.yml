stages:
  - Clone
  - Test_Clone
  - Build_Application_Binary
  - Build_Application_Image

clone application repository:
  stage: Clone
  image: alpinelinux/alpine-gitlab-ci
  script:
    - git clone https://gitlab.com/vsoare/fastwebserver_with_cicd.git
  artifacts:
      paths:
        - /builds/vsoare/fastwebserver_with_cicd

test if cloning successfully:
  stage: Test_Clone
  image: alpine:3.19
  script:
    - if [[ ! -e ./src || ! -d ./src ]]; then
        printf "\033[31m%s\033[0m\n" " - > src directory doesn't exist. project was not cloned with success!";
        exit 1;
      fi
      
      printf "\033[32m%s\033[0m\n" " - > src directory exists. fastwebserver successfully cloned!";
  artifacts:
    paths:
      - /builds/vsoare/fastwebserver_with_cicd


build application binary from source code:
  stage: Build_Application_Binary
  image: vsoare/image-to-execute-pipeline:0.0.1
  script:
    - chmod +x build-binary-image.sh
    - ./build-binary-image.sh
  rules:
    - when: never
  artifacts:
    paths:
      - /builds/vsoare/fastwebserver_with_cicd

build application image:
  stage: Build_Application_Image
  image: docker:stable
  variables:
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind
  script:
    - ls -latr
    - docker build -f ./build-docker-image-with-application-binary-image.DockerFile -t vsoare/fastwebserver:0.0.1 .
    - docker login --username vsoare --password valisoare_191987+
    - docker push fastwebserver:0.0.1
  artifacts:
    paths:
      - /builds/vsoare/fastwebserver_with_cicd

